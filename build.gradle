plugins {
    id("io.micronaut.application") version "3.7.10"
    id("com.microsoft.azure.azurefunctions") version "1.15.0"
}

version = "0.2"
group = "com.example"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("com.microsoft.azure.functions:azure-functions-java-library")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.azure:micronaut-azure-function")
    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    testImplementation("io.micronaut:micronaut-http-client")
}


application {
    mainClass.set("com.example.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

tasks {
}
graalvmNative.toolchainDetection = false
micronaut {
    runtime("azure_function")
    testRuntime("junit5")
    processing {
        incremental(false)
        annotations("com.example.*")
    }
}


azurefunctions {
    resourceGroup = "AppTestApiGateway"
    appName = "micronautFunctionTestSfl"
    pricingTier = "Consumption"
    region = "eastus"
    runtime {
        os = "linux"
       javaVersion = "Java 11"
    }
    localDebug = "transport=dt_socket,server=y,suspend=n,address=5005"
}


